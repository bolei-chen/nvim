let mapleader = " "

call plug#begin()
Plug 'https://github.com/tpope/vim-fugitive'
Plug 'scrooloose/nerdtree'
Plug 'https://github.com/vim-airline/vim-airline'
Plug 'https://github.com/vim-airline/vim-airline-themes'
Plug 'https://github.com/tpope/vim-surround'
Plug 'https://github.com/michaeljsmith/vim-indent-object'
Plug 'https://github.com/tpope/vim-commentary'
call plug#end()

" basics
if has('filetype')
    syntax on
endif

if has('syntax')
    filetype plugin indent on
endif
set encoding=utf-8
set number relativenumber
set splitbelow splitright

" auto completion
set wildmenu

" disable auto commenting
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" spell check mapping
map <leader>sc :setlocal spell! spelllang=en_us<CR>

" split navigation setting
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" delete all trailing whitespace on save
autocmd BufWritePre * %s/\s\+$//e

" stuff for airline mode
let g:airline#extensions#tabline#enabled = 1 " Enable the list of buffers
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline_theme='deus'

" mappings for convenience
noremap o o <esc>
noremap O O <esc>
noremap <F1> :NERDTreeToggle <CR>
noremap n nzz
noremap N Nzz
noremap Y y$

" search settings
set incsearch
set hlsearch
set ignorecase
set smartcase

" search the selected texts in visual mode
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>

" compile function
func! Compile()
exec "w"
if &filetype == 'c'
    exec "!gcc % -o %<"
    exec "!time ./%<"
elseif &filetype == 'cpp'
    exec "!g++ % -o %<"
    exec "!time ./%<"
elseif &filetype == 'java'
    exec "!javac %"
    exec "!time java %"
elseif &filetype == 'sh'
    exec "!time bash %"
elseif &filetype == 'python'
    exec "!time python3 %"
elseif &filetype == 'html'
    exec "!google-chrome % &"
elseif &filetype == 'go'
    exec "!go build %<"
    exec "!time go run %"
elseif &filetype == 'matlab'
    exec "!time octave %"
endif
endfunc
